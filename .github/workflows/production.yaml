name: Production Deploy

on:
  push:
    branches: [ main ]
    tags: [ v* ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout my code
        uses: actions/checkout@v3

      - name: Set up jdk
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Run test & Make coverage report
        run: |
          ./gradlew clean
          ./gradlew test
          ./gradlew jacocoAllReport

      - name: Run coverage measurement (use codecov)
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/reports/jacoco/jacocoAllReport/jacocoAllReport.xml
          fail_ci_if_error: true

      - name: Set up coveralls repo token in environment
        run: echo "COVERALLS_REPO_TOKEN=${{ secrets.COVERALLS_REPO_TOKEN }}" >> $GITHUB_ENV

      - name: Run coverage measurement (use coveralls)
        run: ./gradlew coveralls

  build:
    name: JIB Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout my code
        uses: actions/checkout@v3

      - name: Sign in DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up jdk
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: JIB Build
        run: |
          ./gradlew application:jib

  deploy:
    # Todo: I write deploy script after
    name: Deploy production
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      - name: Checkout my code
        uses: actions/checkout@v3

      - name: check pwd
        run: pwd

#      - name: Deploy to production
#        uses: bitovi/github-actions-deploy-eks-helm@v1.1.0
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ap-northeast-2
#          cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}
#          config-files: helm-chart-springboot/values.yaml
#          chart-path: helm-chart-springboot/
#          namespace: ${{ secrets.EKS_NAMESPACE }}
#          name: springboot-server
